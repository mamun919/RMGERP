// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMGERP.Data;

namespace RMGERP.Migrations
{
    [DbContext(typeof(RMGERPContext))]
    [Migration("20200710063339_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRM.Data.Entity.Employee.AcrInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("advanceComment");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("endDate");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int>("score");

                    b.Property<string>("signatoryDesg")
                        .HasMaxLength(100);

                    b.Property<string>("signatoryName")
                        .HasMaxLength(250);

                    b.Property<string>("startDate");

                    b.Property<string>("supervisorDesg")
                        .HasMaxLength(100);

                    b.Property<string>("supervisorName")
                        .HasMaxLength(250);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("year")
                        .HasMaxLength(10);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("AcrInfo","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("blockSector")
                        .HasMaxLength(100);

                    b.Property<int?>("countryId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<int>("employeeId");

                    b.Property<string>("houseVillage")
                        .HasMaxLength(200);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("postCode")
                        .HasMaxLength(50);

                    b.Property<string>("postOffice")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("roadNumber")
                        .HasMaxLength(100);

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("union")
                        .HasMaxLength(100);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("employeeId");

                    b.HasIndex("thanaId");

                    b.ToTable("Address","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.BankInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("accountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("bankName")
                        .HasMaxLength(100);

                    b.Property<string>("branchName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("ibus")
                        .HasMaxLength(200);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("BankInfo","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Belongings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assetNo")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<DateTime?>("issueDate");

                    b.Property<string>("itemName")
                        .HasMaxLength(200);

                    b.Property<string>("itemSpecification")
                        .HasMaxLength(500);

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("returnDate");

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Belongings","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Children", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin")
                        .HasMaxLength(100);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(50);

                    b.Property<string>("childName")
                        .HasMaxLength(100);

                    b.Property<string>("childNameBn")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designation")
                        .HasMaxLength(100);

                    b.Property<int>("disability");

                    b.Property<string>("education")
                        .HasMaxLength(100);

                    b.Property<int>("employeeId");

                    b.Property<string>("gender")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("nid")
                        .HasMaxLength(100);

                    b.Property<string>("occupation")
                        .HasMaxLength(100);

                    b.Property<string>("organization")
                        .HasMaxLength(200);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Children","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.DrivingLicense", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfExpire");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("licenseNumber")
                        .HasMaxLength(200);

                    b.Property<string>("placeOfIssue")
                        .HasMaxLength(200);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("DrivingLicense","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EducationalQualification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<int?>("degreeId");

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("grade")
                        .HasMaxLength(100);

                    b.Property<string>("institution")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("majorGroup")
                        .HasMaxLength(100);

                    b.Property<int?>("passingYear");

                    b.Property<int?>("relDegreeSubjectId");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("resultId");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("degreeId");

                    b.HasIndex("employeeId");

                    b.HasIndex("relDegreeSubjectId");

                    b.HasIndex("resultId");

                    b.ToTable("EducationalQualification","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmergencyContact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designation")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .HasMaxLength(100);

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(100);

                    b.Property<string>("organization")
                        .HasMaxLength(100);

                    b.Property<string>("relation")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmergencyContact","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeAward", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("awardDate");

                    b.Property<string>("awardName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<string>("issuedBy")
                        .HasMaxLength(100);

                    b.Property<Guid>("key");

                    b.Property<string>("purpose")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeAward","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeContractInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("contractEndDate");

                    b.Property<DateTime?>("contractStartDate");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeContractInfo","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("activityStatus");

                    b.Property<string>("batch")
                        .HasMaxLength(50);

                    b.Property<string>("birthIdentificationNo")
                        .HasMaxLength(100);

                    b.Property<string>("birthPlace")
                        .HasMaxLength(100);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(20);

                    b.Property<int?>("branchId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime?>("dateOfPermanent");

                    b.Property<DateTime?>("dateOfRegularity");

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("departmentId");

                    b.Property<string>("designation")
                        .HasMaxLength(50);

                    b.Property<int>("designationCheck");

                    b.Property<string>("disability")
                        .HasMaxLength(100);

                    b.Property<string>("emailAddress")
                        .HasMaxLength(50);

                    b.Property<string>("emailAddressPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("employeeCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("employeeTypeId");

                    b.Property<string>("fatherNameBn")
                        .HasMaxLength(100);

                    b.Property<string>("fatherNameEn")
                        .HasMaxLength(100);

                    b.Property<bool>("freedomFighter");

                    b.Property<string>("freedomFighterNo")
                        .HasMaxLength(50);

                    b.Property<string>("gender")
                        .HasMaxLength(20);

                    b.Property<string>("govtId")
                        .HasMaxLength(250);

                    b.Property<string>("gpfAcNo")
                        .HasMaxLength(100);

                    b.Property<string>("gpfNomineeName")
                        .HasMaxLength(100);

                    b.Property<string>("homeDistrict")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<DateTime?>("joiningDateGovtService");

                    b.Property<DateTime?>("joiningDatePresentWorkstation");

                    b.Property<string>("joiningDesignation")
                        .HasMaxLength(50);

                    b.Property<Guid>("key");

                    b.Property<string>("lprDate")
                        .HasMaxLength(50);

                    b.Property<string>("maritalStatus")
                        .HasMaxLength(30);

                    b.Property<string>("mobileNumberOffice")
                        .HasMaxLength(50);

                    b.Property<string>("mobileNumberPersonal")
                        .HasMaxLength(50);

                    b.Property<string>("motherNameBn")
                        .HasMaxLength(100);

                    b.Property<string>("motherNameEn")
                        .HasMaxLength(100);

                    b.Property<string>("nameBn")
                        .HasMaxLength(100);

                    b.Property<string>("nameEn")
                        .HasMaxLength(100);

                    b.Property<string>("nationalId")
                        .HasMaxLength(100);

                    b.Property<string>("nationality")
                        .HasMaxLength(100);

                    b.Property<string>("natureOfReqruitment")
                        .HasMaxLength(100);

                    b.Property<string>("orgType")
                        .HasMaxLength(100);

                    b.Property<string>("pabx")
                        .HasMaxLength(50);

                    b.Property<int?>("post");

                    b.Property<string>("prlEndDate")
                        .HasMaxLength(50);

                    b.Property<string>("prlStartDate")
                        .HasMaxLength(50);

                    b.Property<int?>("religionId");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("seniorityNumber")
                        .HasMaxLength(50);

                    b.Property<string>("specialSkill")
                        .HasMaxLength(300);

                    b.Property<string>("telephoneOffice")
                        .HasMaxLength(20);

                    b.Property<string>("telephoneResidence")
                        .HasMaxLength(20);

                    b.Property<string>("tin")
                        .HasMaxLength(100);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("branchId");

                    b.HasIndex("departmentId");

                    b.HasIndex("employeeTypeId");

                    b.HasIndex("religionId");

                    b.ToTable("EmployeeInfo","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeLanguage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<int?>("languageId");

                    b.Property<string>("proficiency")
                        .HasMaxLength(100);

                    b.Property<string>("reading")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("speaking")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("writing")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("languageId");

                    b.ToTable("EmployeeLanguage","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeMembership", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<int?>("membershipId");

                    b.Property<string>("membershipNo")
                        .HasMaxLength(100);

                    b.Property<string>("nameOfOrganization")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("membershipId");

                    b.ToTable("EmployeeMembership","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeProjectActivity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("employeeId");

                    b.Property<int?>("isActive");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("EmployeeProjectActivity","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.FreedomFighter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("number")
                        .HasMaxLength(100);

                    b.Property<string>("owner")
                        .HasMaxLength(100);

                    b.Property<string>("relationship")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("sectorNo")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("FreedomFighter","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.LeaveLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<DateTime?>("leaveFrom")
                        .IsRequired();

                    b.Property<DateTime?>("leaveTo")
                        .IsRequired();

                    b.Property<int?>("leaveTypeId");

                    b.Property<string>("purposeOfLeave")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("status");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("leaveTypeId");

                    b.ToTable("LeaveLog","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Nominee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasMaxLength(150);

                    b.Property<string>("brn")
                        .HasMaxLength(100);

                    b.Property<string>("contact")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("imageUrl")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(100);

                    b.Property<string>("nid")
                        .HasMaxLength(100);

                    b.Property<string>("relation")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Nominee","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.NomineeDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<int?>("nomineeId");

                    b.Property<decimal?>("percentage");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("nomineeId");

                    b.ToTable("NomineeDetail","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.OtherActivity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("activityName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("description")
                        .HasMaxLength(100);

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("OtherActivity","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.OtherQualification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("instituteName")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("markGrade")
                        .HasMaxLength(30);

                    b.Property<int?>("otherQualificationHeadId");

                    b.Property<string>("passingYear")
                        .HasMaxLength(20);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("resultId");

                    b.Property<string>("subject")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("otherQualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("OtherQualification","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PassportDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfExpair");

                    b.Property<DateTime?>("dateOfIssue");

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("passportNumber")
                        .HasMaxLength(100);

                    b.Property<string>("placeOfIssue")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("PassportDetails","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Photograph", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Photograph","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PreviousEmployment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("companyBusiness")
                        .HasMaxLength(100);

                    b.Property<string>("companyLocation")
                        .HasMaxLength(100);

                    b.Property<string>("companyName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("department")
                        .HasMaxLength(50);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("position")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("responsibilities")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("startDate");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("PreviousEmployment","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.ProfessionalQualifications", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<string>("instituteName")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("markGrade")
                        .HasMaxLength(50);

                    b.Property<string>("passingYear")
                        .HasMaxLength(20);

                    b.Property<int?>("qualificationHeadId");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("resultId");

                    b.Property<string>("subject")
                        .HasMaxLength(100);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("qualificationHeadId");

                    b.HasIndex("resultId");

                    b.ToTable("ProfessionalQualifications","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Promotion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("basic");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("designationId");

                    b.Property<int>("employeeId");

                    b.Property<int?>("employeeInfoid");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("promotionDate")
                        .HasMaxLength(20);

                    b.Property<string>("promotionType")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("designationId");

                    b.HasIndex("employeeInfoid");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("Promotion","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PromotionLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("date");

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designation")
                        .HasMaxLength(50);

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("goDate");

                    b.Property<string>("goNumber")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<int?>("payScaleId");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("payScaleId");

                    b.ToTable("PromotionLog","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Publication", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<DateTime?>("publicationDate");

                    b.Property<string>("publicationName")
                        .HasMaxLength(100);

                    b.Property<string>("publicationPlace")
                        .HasMaxLength(100);

                    b.Property<string>("publicationType")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Publication","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Reference", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contact")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designation")
                        .HasMaxLength(50);

                    b.Property<string>("email")
                        .HasMaxLength(40);

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(50);

                    b.Property<string>("organization")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Reference","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Spouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bin")
                        .HasMaxLength(100);

                    b.Property<string>("bloodGroup")
                        .HasMaxLength(10);

                    b.Property<string>("contact")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfBirth");

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designation")
                        .HasMaxLength(40);

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<int>("employeeId");

                    b.Property<string>("gender")
                        .HasMaxLength(20);

                    b.Property<string>("highestEducation")
                        .HasMaxLength(50);

                    b.Property<string>("homeDistrict")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("nid")
                        .HasMaxLength(50);

                    b.Property<string>("occupation")
                        .HasMaxLength(50);

                    b.Property<string>("organization")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("spouseName")
                        .HasMaxLength(50);

                    b.Property<string>("spouseNameBn")
                        .HasMaxLength(100);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Spouse","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Supervisor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("canFinalApprover")
                        .HasMaxLength(100);

                    b.Property<string>("commandOrder")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("supervisorId");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.HasIndex("supervisorId");

                    b.ToTable("Supervisor","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.TransferLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("departmentId");

                    b.Property<int?>("designationId");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("from");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("salaryGradeId");

                    b.Property<DateTime?>("to");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("workStation")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("departmentId");

                    b.HasIndex("designationId");

                    b.HasIndex("employeeId");

                    b.HasIndex("salaryGradeId");

                    b.ToTable("TransferLog","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.TravelInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("countryId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("employeeId");

                    b.Property<DateTime?>("endDate");

                    b.Property<string>("file")
                        .HasMaxLength(100);

                    b.Property<string>("goDate")
                        .HasMaxLength(100);

                    b.Property<string>("goNumber")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("location")
                        .HasMaxLength(100);

                    b.Property<string>("purpose")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("sponsoringAgency")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("startDate");

                    b.Property<string>("titleOfFile")
                        .HasMaxLength(100);

                    b.Property<int?>("travelPurposeId");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.HasIndex("employeeId");

                    b.HasIndex("travelPurposeId");

                    b.ToTable("TravelInfo","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.AddressType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("typeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.BranchUnit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchCode")
                        .HasMaxLength(100);

                    b.Property<string>("branchUnitName")
                        .HasMaxLength(100);

                    b.Property<string>("branchUnitNameBn")
                        .HasMaxLength(100);

                    b.Property<int?>("companyId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("shortOrder");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("BranchUnit","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alternateEmail")
                        .HasMaxLength(50);

                    b.Property<string>("businessNature")
                        .HasMaxLength(250);

                    b.Property<string>("companyEmail")
                        .HasMaxLength(50);

                    b.Property<string>("companyName")
                        .HasMaxLength(100);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("dateOfEstablishment");

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("fileName")
                        .HasMaxLength(250);

                    b.Property<string>("filePath")
                        .HasMaxLength(500);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<decimal?>("liquidityRatio");

                    b.Property<string>("logoUrl")
                        .HasMaxLength(500);

                    b.Property<string>("managerName")
                        .HasMaxLength(50);

                    b.Property<string>("officeTelephone")
                        .HasMaxLength(30);

                    b.Property<string>("ownerName")
                        .HasMaxLength(50);

                    b.Property<int?>("permanentEmployee");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("tinNo")
                        .HasMaxLength(50);

                    b.Property<string>("tradeLicense")
                        .HasMaxLength(100);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("vatNo")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.CompanyAddress", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressTypeId");

                    b.Property<string>("blockSector")
                        .HasMaxLength(50);

                    b.Property<int?>("countryId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int?>("districtId");

                    b.Property<int?>("divisionId");

                    b.Property<string>("houseVillage")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("postCode")
                        .HasMaxLength(50);

                    b.Property<string>("postOffice")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("thanaId");

                    b.Property<string>("type")
                        .HasMaxLength(20);

                    b.Property<string>("union")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("addressTypeId");

                    b.HasIndex("countryId");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("thanaId");

                    b.ToTable("CompanyAddresses");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.CompanyGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("companyId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("groupName")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("CompanyGroups");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countryCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("countryNameBn")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.CourseTitle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("nameBn")
                        .HasMaxLength(50);

                    b.Property<string>("nameEn")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("CourseTitle","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Degree", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<string>("degreeName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("degreeNameBn")
                        .HasMaxLength(30);

                    b.Property<string>("degreeShortName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<int>("levelOfEducationId");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("levelOfEducationId");

                    b.ToTable("Degree","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("deptCode")
                        .HasMaxLength(50);

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("deptNameBn")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Department","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Designation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("designationCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("designationName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("designationNameBn")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Designation","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.District", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("districtCode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("districtName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("districtNameBn")
                        .HasMaxLength(30);

                    b.Property<int>("divisionId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("divisionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Division", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("countryId");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("divisionCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("divisionName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("divisionNameBn")
                        .HasMaxLength(20);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.EmployeeType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("empType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("empTypeBn")
                        .HasMaxLength(50);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("EmployeeType","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Holiday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("holidayName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("holidayNameBn")
                        .HasMaxLength(30);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("weeklyHoliday")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("year");

                    b.HasKey("id");

                    b.ToTable("Holiday","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Language", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("languageName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("languageNameBn")
                        .HasMaxLength(30);

                    b.Property<string>("languageShortName")
                        .HasMaxLength(30);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Language","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.LeaveType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("nameBn")
                        .HasMaxLength(50);

                    b.Property<string>("nameEn")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("LeaveType","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.LevelOfEducation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("levelOfEducationName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("levelOfEducationNameBn")
                        .HasMaxLength(30);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("LevelOfEducation","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Membership", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("membershipName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("membershipNameBn")
                        .HasMaxLength(30);

                    b.Property<string>("membershipShortName")
                        .HasMaxLength(30);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Membership","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.OtherQualificationHead", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("OtherQualificationHead","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.QualificationHead", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("QualificationHead","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Relation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("relationName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("relationNameBn")
                        .HasMaxLength(30);

                    b.Property<string>("relationShortName")
                        .HasMaxLength(30);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Relation","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.RelDegreeSubject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<int>("degreeId");

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int>("subjectId");

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("degreeId");

                    b.HasIndex("subjectId");

                    b.ToTable("RelDegreeSubject","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Religion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("nameBn")
                        .HasMaxLength(20);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Religion","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Result", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<decimal>("resultMaxValue");

                    b.Property<string>("resultName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("resultNameBn")
                        .HasMaxLength(50);

                    b.Property<string>("resultShortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Result","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.SalaryGrade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("basicAmount");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<decimal>("currentBasic");

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("gradeName")
                        .HasMaxLength(100);

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("payScale")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("SalaryGrade","Payroll");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.ShiftGroupDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<string>("endTime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("holiday");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<int>("shiftGroupMasterId");

                    b.Property<string>("startTime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("weekDay")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("shiftGroupMasterId");

                    b.ToTable("ShiftGroupDetail","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.ShiftGroupMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shiftName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("shiftNameBn")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("ShiftGroupMaster","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Subject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("subjectName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("subjectNameBn")
                        .HasMaxLength(50);

                    b.Property<string>("subjectShortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("Subject","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Thana", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<int>("districtId");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("shortName")
                        .HasMaxLength(50);

                    b.Property<string>("thanaCode")
                        .HasMaxLength(50);

                    b.Property<string>("thanaName")
                        .HasMaxLength(50);

                    b.Property<string>("thanaNameBn")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("districtId");

                    b.ToTable("Thanas");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.TrainingCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("trainingCategoryName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("trainingCategoryNameBn")
                        .HasMaxLength(100);

                    b.Property<string>("trainingCategoryShortName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("TrainingCategory","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.TravelPurpose", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("purposeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("purposeNameBn")
                        .HasMaxLength(100);

                    b.Property<string>("purposeShortName")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("TravelPurpose","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.TravelVehicleType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("name")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("TravelVehicleType","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Vehicle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("vehicleShortName")
                        .HasMaxLength(50);

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("vehicleTypeBn")
                        .HasMaxLength(60);

                    b.HasKey("id");

                    b.ToTable("Vehicle","HR");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Year", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("deletedAt");

                    b.Property<bool>("isDelete");

                    b.Property<Guid>("key");

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(100);

                    b.Property<string>("year")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("Year","HR");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RMGERP.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.AcrInfo", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Address", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("HRM.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("HRM.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.BankInfo", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Children", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.DrivingLicense", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EducationalQualification", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId");

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.RelDegreeSubject", "relDegreeSubject")
                        .WithMany()
                        .HasForeignKey("relDegreeSubjectId");

                    b.HasOne("HRM.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmergencyContact", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeAward", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeContractInfo", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeInfo", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.BranchUnit", "branch")
                        .WithMany()
                        .HasForeignKey("branchId");

                    b.HasOne("HRM.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("HRM.Data.Entity.Master.EmployeeType", "employeeType")
                        .WithMany()
                        .HasForeignKey("employeeTypeId");

                    b.HasOne("HRM.Data.Entity.Master.Religion", "religion")
                        .WithMany()
                        .HasForeignKey("religionId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeLanguage", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.Language", "language")
                        .WithMany()
                        .HasForeignKey("languageId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeMembership", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.Membership", "membership")
                        .WithMany()
                        .HasForeignKey("membershipId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.EmployeeProjectActivity", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.FreedomFighter", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.LeaveLog", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.LeaveType", "leaveType")
                        .WithMany()
                        .HasForeignKey("leaveTypeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Nominee", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.NomineeDetail", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.Nominee", "nominee")
                        .WithMany()
                        .HasForeignKey("nomineeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.OtherActivity", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.OtherQualification", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.OtherQualificationHead", "otherQualificationHead")
                        .WithMany()
                        .HasForeignKey("otherQualificationHeadId");

                    b.HasOne("HRM.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PassportDetails", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Photograph", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PreviousEmployment", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.ProfessionalQualifications", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.QualificationHead", "qualificationHead")
                        .WithMany()
                        .HasForeignKey("qualificationHeadId");

                    b.HasOne("HRM.Data.Entity.Master.Result", "result")
                        .WithMany()
                        .HasForeignKey("resultId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Promotion", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employeeInfo")
                        .WithMany()
                        .HasForeignKey("employeeInfoid");

                    b.HasOne("HRM.Data.Entity.Master.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.PromotionLog", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.SalaryGrade", "payScale")
                        .WithMany()
                        .HasForeignKey("payScaleId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Publication", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Reference", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Spouse", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.Supervisor", b =>
                {
                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "supervisor")
                        .WithMany()
                        .HasForeignKey("supervisorId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.TransferLog", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId");

                    b.HasOne("HRM.Data.Entity.Master.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationId");

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.SalaryGrade", "salaryGrade")
                        .WithMany()
                        .HasForeignKey("salaryGradeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Employee.TravelInfo", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("HRM.Data.Entity.Employee.EmployeeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.TravelPurpose", "travelPurpose")
                        .WithMany()
                        .HasForeignKey("travelPurposeId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.BranchUnit", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.CompanyAddress", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.AddressType", "addressType")
                        .WithMany()
                        .HasForeignKey("addressTypeId");

                    b.HasOne("HRM.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.HasOne("HRM.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("HRM.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("HRM.Data.Entity.Master.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.CompanyGroup", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Degree", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.LevelOfEducation", "levelOfEducation")
                        .WithMany()
                        .HasForeignKey("levelOfEducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.District", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Division", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.RelDegreeSubject", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.Degree", "degree")
                        .WithMany()
                        .HasForeignKey("degreeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HRM.Data.Entity.Master.Subject", "subject")
                        .WithMany()
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.ShiftGroupDetail", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.ShiftGroupMaster", "shiftGroupMaster")
                        .WithMany()
                        .HasForeignKey("shiftGroupMasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRM.Data.Entity.Master.Thana", b =>
                {
                    b.HasOne("HRM.Data.Entity.Master.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RMGERP.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RMGERP.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RMGERP.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RMGERP.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
